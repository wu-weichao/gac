@echo off
REM GAC (Git AI Commit) - Windows 安装脚本

setlocal enabledelayedexpansion

set GAC_VERSION=v1.0.0
set INSTALL_DIR=%USERPROFILE%\.gac
set BIN_DIR=%INSTALL_DIR%\bin
set CONFIG_FILE=%INSTALL_DIR%\config.json

echo [INFO] Installing GAC (Git AI Commit) for Windows...

REM 检查 Git 是否安装
git --version >nul 2>&1
if !errorlevel! neq 0 (
    echo [ERROR] Git is not installed. Please install Git first.
    exit /b 1
)

REM 检查 Go 是否安装
go version >nul 2>&1
if !errorlevel! equ 0 (
    echo [INFO] Go detected, will build from source
    goto :build_from_source
) else (
    echo [INFO] Go not detected, will download pre-built binary
    goto :download_binary
)

:build_from_source
echo [INFO] Building GAC from source...

REM 创建临时目录
set TEMP_DIR=%TEMP%\gac_build_%RANDOM%
mkdir "!TEMP_DIR!"
cd /d "!TEMP_DIR!"

REM 复制源码（实际部署时应该从 git 克隆）
if exist "%~dp0src" (
    xcopy /e /i "%~dp0src\*" . >nul
) else (
    echo [ERROR] Source code not found
    exit /b 1
)

REM 构建
go mod tidy
go build -ldflags "-s -w" -o gac-core.exe main.go

REM 安装到 BIN_DIR
if not exist "%BIN_DIR%" mkdir "%BIN_DIR%"
copy gac-core.exe "%BIN_DIR%\" >nul

REM 清理
cd /d %USERPROFILE%
rmdir /s /q "!TEMP_DIR!"

echo [INFO] Built and installed gac-core.exe to %BIN_DIR%\gac-core.exe
goto :create_config

:download_binary
echo [INFO] Downloading GAC binary for Windows...

set BINARY_URL=https://github.com/your-repo/gac/releases/download/%GAC_VERSION%/gac-core_windows_amd64.exe

if not exist "%BIN_DIR%" mkdir "%BIN_DIR%"

REM 使用 PowerShell 下载文件
powershell -Command "try { Invoke-WebRequest -Uri '%BINARY_URL%' -OutFile '%BIN_DIR%\gac-core.exe' -UseBasicParsing } catch { Write-Host 'Download failed. Please check your internet connection.'; exit 1 }"

if !errorlevel! neq 0 (
    echo [ERROR] Failed to download binary
    exit /b 1
)

echo [INFO] Downloaded and installed gac-core.exe to %BIN_DIR%\gac-core.exe

:create_config
if not exist "%INSTALL_DIR%" mkdir "%INSTALL_DIR%"

if not exist "%CONFIG_FILE%" (
    (
        echo {
        echo   "llm": {
        echo     "provider": "openai",
        echo     "api_key": "",
        echo     "endpoint": "https://api.openai.com/v1/chat/completions",
        echo     "model": "gpt-3.5-turbo"
        echo   }
        echo }
    ) > "%CONFIG_FILE%"
    echo [INFO] Created default configuration at %CONFIG_FILE%
) else (
    echo [INFO] Configuration file already exists at %CONFIG_FILE%
)

:setup_path
REM 检查 PATH 中是否已包含 BIN_DIR
echo %PATH% | findstr /i "%BIN_DIR%" >nul
if !errorlevel! neq 0 (
    echo [INFO] Adding %BIN_DIR% to user PATH...
    
    REM 添加到用户环境变量
    setx PATH "%PATH%;%BIN_DIR%"
    
    echo [WARN] Please restart your command prompt or PowerShell for PATH changes to take effect
)

:install_hook
if not exist ".git" (
    echo [WARN] Not in a Git repository. Skipping hook installation.
    echo [INFO] Run 'gac install' in any Git repository to set up the hook.
    goto :finish
)

if not exist ".git\hooks" mkdir ".git\hooks"

(
    echo @echo off
    echo REM GAC (Git AI Commit^) Hook
    echo REM Generated by GAC installer
    echo.
    echo REM 检查是否在 PATH 中
    echo gac-core.exe "%%1" 2^>nul
    echo if %%errorlevel%% neq 0 (
    echo     if exist "%%USERPROFILE%%\.local\bin\gac-core.exe" (
    echo         "%%USERPROFILE%%\.local\bin\gac-core.exe" "%%1"
    echo     ^) else (
    echo         echo GAC not found. Please check installation. ^>^&2
    echo         exit /b 0
    echo     ^)
    echo ^)
) > ".git\hooks\prepare-commit-msg.bat"

REM 在 Git Bash 环境中，我们也需要创建 sh 脚本
(
    echo #!/bin/sh
    echo # GAC (Git AI Commit^) Hook
    echo # Generated by GAC installer
    echo.
    echo # Windows 环境下的路径处理
    echo if command -v gac-core.exe ^>^/dev^/null 2^>^&1; then
    echo     gac-core.exe "$1"
    echo elif [ -x "$HOME/.local/bin/gac-core.exe" ]; then
    echo     "$HOME/.local/bin/gac-core.exe" "$1"
    echo else
    echo     echo "GAC not found. Please check installation." ^>^&2
    echo     exit 0
    echo fi
) > ".git\hooks\prepare-commit-msg"

echo [INFO] Installed Git hook in current repository

:finish
echo.
echo [INFO] GAC installation completed!
echo.
echo Next steps:
echo 1. Set your API key: set GAC_API_KEY=your-api-key
echo 2. Or edit config file: %CONFIG_FILE%
echo 3. In any Git repo, run: gac install (to set up the hook)
echo 4. Make some changes, stage them, and commit!

pause